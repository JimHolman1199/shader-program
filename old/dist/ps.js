!function(){"use strict";window.PS={},PS.Renderer=function(t){void 0===t&&(t={});var e=PS.MergeOptions({antialias:!1,shaders:{vertex:PS.Shaders.Vertex,fragment:PS.Shaders.Fragment},width:640,height:480},t);this.options=e;var r=document.createElement("canvas"),o=r.getContext("webgl",{antialias:t.antialias});return this.domElement=r,this.gl=o,!!o&&(this.createProgram(),this.createTexture(),this.resolution=o.getUniformLocation(this.program,"u_resolution"),this.hasTexture=o.getUniformLocation(this.program,"u_hasTexture"),o.uniform1f(this.hasTexture,0),this.setSize(e.width,e.height),o.blendFunc(o.SRC_ALPHA,o.ONE),o.enable(o.BLEND),o.disable(o.DEPTH_TEST),this.buffers={positions:this.createBuffer("a_position",2),options:this.createBuffer("a_options",3),color:this.createBuffer("a_color",3)},this.buffersData={positions:[],options:[],color:[]},this.lastTime=null,this)},PS.Renderer.prototype.createShader=function(t,e){var r=this.gl,o=r.createShader(t);if(r.shaderSource(o,e),r.compileShader(o),r.getShaderParameter(o,r.COMPILE_STATUS))return o;console.log(r.getShaderInfoLog(o)),r.deleteShader(o)},PS.Renderer.prototype.createProgram=function(){var t=this.gl,e=this.options,r=this.createShader(t.VERTEX_SHADER,e.shaders.vertex),o=this.createShader(t.FRAGMENT_SHADER,e.shaders.fragment),i=t.createProgram();t.attachShader(i,r),t.attachShader(i,o),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS)?(t.useProgram(i),this.program=i):(console.log(t.getProgramInfoLog(i)),t.deleteProgram(i))},PS.Renderer.prototype.createBuffer=function(t,e){var r=this.gl,o=this.program,i=r.getAttribLocation(o,t),a=r.createBuffer();return r.bindBuffer(r.ARRAY_BUFFER,a),r.enableVertexAttribArray(i),r.vertexAttribPointer(i,e,r.FLOAT,!1,0,0),a},PS.Renderer.prototype.setBuffer=function(t,e){var r=this.gl;null!=t?(r.bindBuffer(r.ARRAY_BUFFER,t),r.bufferData(r.ARRAY_BUFFER,new Float32Array(e),r.STATIC_DRAW)):r.bindBuffer(r.ARRAY_BUFFER,null)},PS.Renderer.prototype.createTexture=function(){var t=this.gl,e=t.createTexture();t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,new Uint8Array([0,0,0,0])),this.texture=e},PS.Renderer.prototype.loadTexture=function(t){var e=this.gl,r=this.texture;e.uniform1f(this.hasTexture,1);var o=new Image;o.onload=function(){e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,o),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.generateMipmap(e.TEXTURE_2D)},o.src=t},PS.Renderer.prototype.getDelta=function(t){if(null==this.lastTime)return this.lastTime=t?performance.now():Date.now(),0;var e=t?performance.now():Date.now(),r=e-this.lastTime;return this.lastTime=e,r},PS.Renderer.prototype.setSize=function(t,e){var r=this.domElement,o=this.gl;r.width=t,r.height=e,r.style.width=t+"px",r.style.height=e+"px",o.viewport(0,0,t,e),o.clearColor(0,0,0,0),o.uniform2f(this.resolution,t,e)},PS.Renderer.prototype.render=function(t){var e=this.gl,r=this.buffers,o=this.buffersData,i=t.length;e.clear(e.COLOR_BUFFER_BIT);for(var a=0,n=0,s=2*i;a<s;a+=2,n++)o.positions[a]=t[n].x,o.positions[a+1]=t[n].y;for(a=0,n=0,s=3*i;a<s;a+=3,n++)o.options[a]=t[n].size,o.options[a+1]=t[n].alpha,o.options[a+2]=t[n].rotation;for(a=0,n=0,s=3*i;a<s;a+=3,n++)o.color[a]=t[n].color[0],o.color[a+1]=t[n].color[1],o.color[a+2]=t[n].color[2];this.setBuffer(r.positions,o.positions),this.setBuffer(r.options,o.options),this.setBuffer(r.color,o.color),this.setBuffer(null),e.drawArrays(e.POINTS,0,i)},PS.Particles=function(t){if(void 0!==t){t=parseInt(t);for(var e=[],r=0;r<t;r++)e.push({x:0,y:0,size:0,alpha:1,rotation:0,color:[1,0,0]});return e}},PS.Shaders={Vertex:["precision lowp float;","attribute vec2 a_position;","attribute vec3 a_options;","attribute vec3 a_color;","uniform vec2 u_resolution;","varying float alpha;","varying float rotation;","varying vec3 color;","void main() {","alpha = a_options.y;","rotation = a_options.z;","color = a_color;","vec2 pos = vec2(a_position.x, a_position.y);","gl_Position = vec4((pos.xy / u_resolution) * 2.0 - 1.0, 0.0, 1.0);","gl_PointSize = a_options.x;","}"].join("\n"),Fragment:["precision lowp float;","uniform sampler2D u_texture;","uniform float u_hasTexture;","varying float alpha;","varying float rotation;","varying vec3 color;","void main() {","if (u_hasTexture > 0.5) {","float mid = 0.5;","float vRotation = rotation;","vec2 rotated = vec2(","cos(vRotation) * (gl_PointCoord.x - mid) + sin(vRotation) * (gl_PointCoord.y - mid) + mid,","cos(vRotation) * (gl_PointCoord.y - mid) - sin(vRotation) * (gl_PointCoord.x - mid) + mid",");","vec4 texColor = texture2D(u_texture, rotated);","gl_FragColor = vec4(texColor.rgb, texColor.a * alpha);","} else {","gl_FragColor = vec4(color.r, color.g, color.b, alpha);","}","}"].join("\n")},PS.MergeOptions=function(t,e){var r={};for(var o in t)t.hasOwnProperty(o)&&(r[o]=t[o]);for(var o in e)e.hasOwnProperty(o)&&(r[o]=e[o]);return r}}();
