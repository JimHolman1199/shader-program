!function(){"use strict";window.PS={},PS.Renderer=function(e){void 0===e&&(e={});var t=PS.MergeOptions({antialias:!1,shaders:{vertex:PS.Shaders.Vertex,fragment:PS.Shaders.Fragment},width:640,height:480},e);this.options=t;var r=document.createElement("canvas"),o=r.getContext("webgl",{antialias:e.antialias});return this.domElement=r,this.gl=o,!!o&&(this.createProgram(),this.createTexture(),this.resolution=o.getUniformLocation(this.program,"u_resolution"),this.hasTexture=o.getUniformLocation(this.program,"u_hasTexture"),o.uniform1f(this.hasTexture,0),this.setSize(t.width,t.height),o.blendFunc(o.SRC_ALPHA,o.ONE),o.enable(o.BLEND),o.disable(o.DEPTH_TEST),this.buffers={positions:this.createBuffer("a_position",2),options:this.createBuffer("a_options",3),color:this.createBuffer("a_color",3)},this.lastTime=Date.now(),this)},PS.Renderer.prototype.createShader=function(e,t){var r=this.gl,o=r.createShader(e);if(r.shaderSource(o,t),r.compileShader(o),r.getShaderParameter(o,r.COMPILE_STATUS))return o;console.log(r.getShaderInfoLog(o)),r.deleteShader(o)},PS.Renderer.prototype.createProgram=function(){var e=this.gl,t=this.options,r=this.createShader(e.VERTEX_SHADER,t.shaders.vertex),o=this.createShader(e.FRAGMENT_SHADER,t.shaders.fragment),i=e.createProgram();e.attachShader(i,r),e.attachShader(i,o),e.linkProgram(i),e.getProgramParameter(i,e.LINK_STATUS)?(e.useProgram(i),this.program=i):(console.log(e.getProgramInfoLog(i)),e.deleteProgram(i))},PS.Renderer.prototype.createBuffer=function(e,t){var r=this.gl,o=this.program,i=r.getAttribLocation(o,e),a=r.createBuffer();return r.bindBuffer(r.ARRAY_BUFFER,a),r.enableVertexAttribArray(i),r.vertexAttribPointer(i,t,r.FLOAT,!1,0,0),a},PS.Renderer.prototype.setBuffer=function(e,t){var r=this.gl;null!=e?(r.bindBuffer(r.ARRAY_BUFFER,e),r.bufferData(r.ARRAY_BUFFER,new Float32Array(t),r.STATIC_DRAW)):r.bindBuffer(r.ARRAY_BUFFER,null)},PS.Renderer.prototype.createTexture=function(){var e=this.gl,t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,new Uint8Array([0,0,0,0])),this.texture=t},PS.Renderer.prototype.loadTexture=function(e){var t=this.gl,r=this.texture;t.uniform1f(this.hasTexture,1);var o=new Image;o.onload=function(){t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,o),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.generateMipmap(t.TEXTURE_2D)},o.src=e},PS.Renderer.prototype.getDelta=function(){var e=Date.now(),t=e-this.lastTime;return this.lastTime=e,t},PS.Renderer.prototype.setSize=function(e,t){var r=this.domElement,o=this.gl;r.width=e,r.height=t,r.style.width=e+"px",r.style.height=t+"px",o.viewport(0,0,e,t),o.clearColor(0,0,0,0),o.uniform2f(this.resolution,e,t)},PS.Renderer.prototype.render=function(e){var t=this.gl,r=this.buffers;t.clear(t.COLOR_BUFFER_BIT);for(var o={positions:[],options:[],color:[]},i=0,a=e.length;i<a;i++){var n=e[i];o.positions.push(n.x,n.y),o.options.push(n.size,n.alpha,n.rotation),o.color.push(n.color[0],n.color[1],n.color[2])}this.setBuffer(r.positions,o.positions),this.setBuffer(r.options,o.options),this.setBuffer(r.color,o.color),this.setBuffer(null),t.drawArrays(t.POINTS,0,o.positions.length/2)},PS.Particles=function(e){if(void 0!==e){e=parseInt(e);for(var t=[],r=0;r<e;r++)t.push({x:0,y:0,size:0,alpha:1,rotation:0,color:[1,0,0]});return t}},PS.Shaders={Vertex:["precision lowp float;","attribute vec2 a_position;","attribute vec3 a_options;","attribute vec3 a_color;","uniform vec2 u_resolution;","varying float alpha;","varying float rotation;","varying vec3 color;","void main() {","alpha = a_options.y;","rotation = a_options.z;","color = a_color;","vec2 pos = vec2(a_position.x, a_position.y);","gl_Position = vec4((pos.xy / u_resolution) * 2.0 - 1.0, 0.0, 1.0);","gl_PointSize = a_options.x;","}"].join("\n"),Fragment:["precision lowp float;","uniform sampler2D u_texture;","uniform float u_hasTexture;","varying float alpha;","varying float rotation;","varying vec3 color;","void main() {","if (u_hasTexture > 0.5) {","float mid = 0.5;","float vRotation = rotation;","vec2 rotated = vec2(","cos(vRotation) * (gl_PointCoord.x - mid) + sin(vRotation) * (gl_PointCoord.y - mid) + mid,","cos(vRotation) * (gl_PointCoord.y - mid) - sin(vRotation) * (gl_PointCoord.x - mid) + mid",");","vec4 texColor = texture2D(u_texture, rotated);","gl_FragColor = vec4(texColor.rgb, texColor.a * alpha);","} else {","gl_FragColor = vec4(color.r, color.g, color.b, alpha);","}","}"].join("\n")},PS.MergeOptions=function(e,t){var r={};for(var o in e)e.hasOwnProperty(o)&&(r[o]=e[o]);for(var o in t)t.hasOwnProperty(o)&&(r[o]=t[o]);return r}}();